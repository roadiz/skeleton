client_max_body_size 256m;

map $sent_http_content_type $expires {
    default                     1y;
    "text/html"                 off;
    "text/html; charset=utf-8"  off;
}

server {
    listen 80;
    server_name localhost;

    root /app/public;

    ## Only use this block if you are using Roadiz solo
    index index.php index.html;

    include /etc/nginx/redirections.conf;

    # Kick wordpress brute force attack before it
    # fills Roadiz logs with not-found resources.
    location ~ ^/wp\-(includes|admin|login\.php) {
        access_log off;
        return 404;
    }

    # Enable Expire on Themes public assets
    location ~* ^/(?:bundles|themes|files|assets|storage)/*.*\.(?:ico|pdf|css|js|woff2?|eot|ttf|otf|svg|gif|jpe?g|png|webp|avif|mp4|webm)$ {
        # Serve not found files with PHP
        try_files $uri $uri/ /index.php$is_args$args;

        expires 1y;
        access_log off;
        add_header "Pragma" "public";
        add_header "Cache-Control" "public";
        add_header "Vary" "Accept-Encoding";
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';

        if ($request_method = 'OPTIONS') {
            access_log off;
            #
            # Tell client that this pre-flight info is valid for 20 days
            #
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    ### When using Roadiz solo
    location / {
        # First attempt to serve request as file, then
        # as directory, then fall back to front-end controller
        # (do not forget to pass GET parameters).
        try_files $uri $uri/ /index.php$is_args$args;
    }

    ### When using Roadiz with Nuxt.js, uncomment these blocks
    ### To enable monorepo routing

    # Catch all Roadiz routes first
    #location ~ ^/(rz\-admin|files|assets|themes|bundles|api|_wdt|_profiler|css\/main\-color\.css|custom\-form|css\/login\/image) {
    #    try_files $uri $uri/ /index.php$is_args$args;
    #}

    #location ~* \.(ico|css|js|woff2?|eot|ttf|otf|svg|gif|jpe?g|png|webp|mp4|avif|webm)$ {
    #    expires $expires;
    #    add_header Pragma public;
    #    add_header Cache-Control "public";
    #    try_files $uri $uri/ @proxy;
    #}

    ## Then Nuxt.js routes
    #location / {
    #    expires $expires;
    #    try_files $uri $uri/index.html @proxy;
    #}

    #
    # PHP API entry point.
    #
    location ~ ^/index\.php(/|$) {
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_pass app:9000;
        fastcgi_index index.php;
        fastcgi_split_path_info ^(.+\.php)(.*)$;

        # Bigger buffer size to handle cache invalidation headers expansion
        # https://github.com/api-platform/docs/blob/2.3/extra/troubleshooting.md#upstream-sent-too-big-header-while-reading-response-header-from-upstream-502-error
        fastcgi_buffer_size 32k;
        fastcgi_buffers 8 16k;

        include fastcgi_params;
        try_files $uri =404;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/app.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    ## Uncomment this block if you are using a Node.js server
    #location @proxy {
    #    add_header X-Frame-Options "SAMEORIGIN";
    #    add_header X-Cache-Status $upstream_cache_status;
    #    proxy_redirect                      off;
    #    proxy_set_header Host               $host;
    #    proxy_set_header X-Real-IP          $remote_addr;
    #    proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
    #    # Force HTTPS protocol because we are behind a reverse proxy
    #    proxy_set_header X-Forwarded-Proto  https;
    #    proxy_read_timeout          1m;
    #    proxy_connect_timeout       1m;
    #    proxy_pass                  http://node:3000;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    location ~ /\.ht {
        deny all;
    }
    location ~ /\.git {
        deny all;
    }
    location = /README.md {
        deny all;
    }
    location = /.nojekyll {
        deny all;
    }

    # Don't log robots.txt or favicon.ico files
    location = /favicon.ico { log_not_found off; access_log off; }
}
