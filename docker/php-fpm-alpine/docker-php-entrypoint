#!/bin/sh
set -e

#
# Override default entrypoint to add some maintenance and migration commands (PROD)
# DO NOT CALL THIS SCRIPT FOR WORKERS AND CRON containers (see docker-compose.yml)
#

# Fix volume permissions
/bin/chown -R www-data:www-data /var/www/html/var || true;
/bin/chown -R www-data:www-data /var/www/html/public || true;
/bin/chown -R www-data:www-data /var/www/html/config || true;

# Print local env vars to .env.xxx.php file for performances and crontab jobs
/usr/bin/sudo -u www-data -- bash -c  "/usr/local/bin/composer dump-env prod"
/usr/bin/sudo -u www-data -- bash -c "/var/www/html/bin/console cache:clear -n"
# Clear all cache pool on Symfony 5.4 https://symfony.com/doc/5.4/cache.html#clearing-the-cache
/usr/bin/sudo -u www-data -- bash -c "/var/www/html/bin/console cache:pool:clear cache.global_clearer -n"
/usr/bin/sudo -u www-data -- bash -c "/var/www/html/bin/console assets:install -n"
/usr/bin/sudo -u www-data -- bash -c "/var/www/html/bin/console themes:assets:install -n Rozier"

# To improve performance (i.e. avoid decrypting secrets at runtime),
# you can decrypt your secrets during deployment to the "local" vault:
#/usr/bin/sudo -u www-data -- bash -c "APP_RUNTIME_ENV=prod /var/www/html/bin/console secrets:decrypt-to-local --force"

#
# Wait for database to be ready for next commands and migrations
#
/wait-for-it.sh -t 0 -s ${MYSQL_HOST}:${MYSQL_PORT}

##
## Uncomment following lines to generate node-types found in database
## This disallow automatic node-type update from Docker image, and local database
## has priority over committed changes
##
#/usr/bin/sudo -u www-data -- bash -c "/var/www/html/bin/console generate:nsentities"
#/usr/bin/sudo -u www-data -- bash -c "/var/www/html/bin/console generate:api-resources"

##
## Uncomment following lines to enable automatic migration for your theme at each docker start
##
## Perform migrations directly as database should be ready thanks to wait-for-it.sh
# /usr/bin/sudo -u www-data -- bash -c "/var/www/html/bin/console doctrine:migrations:migrate -n --allow-no-migration"
# /usr/bin/sudo -u www-data -- bash -c "/var/www/html/bin/console app:install -n"

# first arg is `-f` or `--some-option`
if [ "${1#-}" != "$1" ]; then
	set -- php-fpm "$@"
fi

exec "$@"
