#!/bin/sh
set -e

env >> /etc/environment

# cron entrypoint must be run as root as it spawns crontab for each system user
if [ "$(id -u)" -ne 0 ]; then
    echo "Please run as root"
    exit 1
fi

# Print env infos
echo "APP_ENV=${APP_ENV}";
echo "APP_RUNTIME_ENV=${APP_RUNTIME_ENV}";
echo "APP_DEBUG=${APP_DEBUG}";
# Debug infos
/usr/bin/sudo -E -u php -- bash -c "echo \"[sudo] APP_ENV=${APP_ENV}\"";
/usr/bin/sudo -E -u php -- bash -c "echo \"[sudo] APP_RUNTIME_ENV=${APP_RUNTIME_ENV}\"";
/usr/bin/sudo -E -u php -- bash -c "echo \"[sudo] APP_DEBUG=${APP_DEBUG}\"";

/bin/chown -R php:php /app/var || true;
/bin/chown -R php:php /app/config || true;

# Print local env vars to .env.xxx.php file for performances and crontab jobs
/usr/bin/sudo -E -u php -- bash -c  "/usr/local/bin/composer dump-env prod"
# To improve performance (i.e. avoid decrypting secrets at runtime),
# you can decrypt your secrets during deployment to the "local" vault:
/usr/bin/sudo -E -u php -- bash -c "APP_RUNTIME_ENV=prod /app/bin/console secrets:decrypt-to-local --force"
# Must clear cache before launching cron to avoid issues with Solr reindexing
/usr/bin/sudo -E -u php -- bash -c "APP_RUNTIME_ENV=prod /app/bin/console cache:clear -n"
# Clear all cache pool on Symfony
/usr/bin/sudo -E -u php -- bash -c "APP_RUNTIME_ENV=prod /app/bin/console cache:pool:clear cache.global_clearer -n"

# Let cron take the wheel
echo "Starting cron in foreground."
/usr/sbin/cron -f -l 7
