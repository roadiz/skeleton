---
RZ\Roadiz\CoreBundle\Entity\NodesSources:
    iri: NodesSources
    shortName: NodesSources
    collectionOperations:
        get:
            method: "GET"
            normalization_context:
                groups: ["nodes_sources_base", "nodes_sources_default", "urls", "tag_base", "translation_base", "document_display"]
        search:
            method: 'GET'
            path: '/nodes_sources/search'
            controller: App\Controller\SearchNodesSourcesController
            normalization_context:
                groups: ["nodes_sources_base", "nodes_sources_default", "urls", "tag_base", "translation_base", "document_display"]
            openapi_context:
                summary: Search NodesSources resources
                description: |
                    Search NodesSources resources using **Solr** full-text search engine
                parameters:
                    -   type: string
                        name: search
                        in: query
                        required: true
                        description: Search pattern
                        schema:
                            type: string

    itemOperations:
        get:
            method: 'GET'
            normalization_context:
                groups: ["nodes_sources", "urls", "tag_base", "translation_base", "document_display"]
        getByPath:
            method: 'GET'
            path: '/web_response_by_path'
            read: false
            controller: RZ\Roadiz\CoreBundle\Api\Controller\GetWebResponseByPathController
            normalization_context:
                groups:
                    - "web_response"
                    - "walker"
                    - "walker_level"
                    - "walker_metadata"
                    - "meta"
                    - "children"
                    - "children_count"
                    - "nodes_sources"
                    - "urls"
                    - "tag_base"
                    - "translation_base"
                    - "document_display"
            openapi_context:
                summary: Get a resource by its path wrapped in a WebResponse object
                description: |
                    Get a resource by its path wrapped in a WebResponse
                parameters:
                    -   type: string
                        name: path
                        in: query
                        required: true
                        description: Resource path, or `/` for home page
                        schema:
                            type: string
                responses:
                    200:
                        description: WebResponse object
                        content:
                            application/json:
                                schema:
                                    type: object
                                    properties:
                                        item:
                                            type: object
                                            description: A resource, for example a NodesSources
                                            example:
                                                title: Title
                                                url: /my-resource
                                        breadcrumbs:
                                            type: object
                                            description: Breadcrumbs object
                                            example:
                                                items:
                                                    -   title: Title
                                                        url: /my-resource
                                                    -   title: Other title
                                                        url: /my-second-resource
                                        head:
                                            type: object
                                            description:
                                            example:
                                                shareImage: { }
                                                homePageUrl: "/"
                                                siteName: "Example"
                                        blocks:
                                            type: object
                                            description:
                                            example:
                                                -   children: [ ]
                                                    item:
                                                        title: My block title
                                                -   children: [ ]
                                                    item:
                                                        title: My other block title
